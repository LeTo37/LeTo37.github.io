---
layout: default
modal-id: 0
title: Part Placement Automation
date: 2019-06-25
img: wrench/Wrench.png 
alt: image-alt
project-date: December 2019
description: <h2>Overview</h2> The initial goal of this project was to observe the manufacturing process of the wrench in question and identify a bottleneck in the process that can be addressed by automation. With that goal set out, there were no set requirements on what should be automated and how it should be automated. This allowed for freedom and trust in following the design process to achieve the optimal solution to this problem.<br><br> After journey mapping the manufacturing process, giving time values for each task as well as automatibility ratings and assessments regarding what would be gained from automation, it was clear to see that automating the set of tasks involved in placing the wrench jaws into the wrench would result in the most gain to the entire process. As such the task was set out to use/design whatever is deemed appropriate to automate this process in a way that is both accurate and fast. The resulting design is shown below<span>&#58;</span> <br> <br> <div align="center"> <iframe width="630" height="385" src="https://www.youtube-nocookie.com/embed/1hQX_BQMhLg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe> </div> <br> As will be detailed, the mechanical design for this project was primarily done using <a href="https://www.onshape.com/" target="_blank">OnShape</a> CAD software, the construction of the rig was done using various prototyping methods such as 3D printing and Laser Cutting; a PIC32MX795F512H microcontroller was used to control the system and the relevant peripheral circuitry; and coding of the microcontroller was done in C.<br> <br><h2>Approach</h2> As mentioned above, the first step of this project was just to observe. Professor Brown gave me videos of the current production process for the wrench and I began to make note of each task being undertaken, how long each task was taking and how that task affects the other tasks. It was clear that the biggest bottleneck in the process was the placing of the wrench jaws in the wrench. This task represented the biggest gain from automation but also perhaps one of the most challenging steps to automate given the precise needs for placing the jaw as well as the small amount of space in the middle of the wrench in which a mechanism can actuate.<br> <br>So begun the iterative process of design. The bulk of work done in this project was in mechanical design, each week brought about a new iteration of the current design as well as thoughts on a new approach. That journey can be mapped by following the different "STL" files of the various designs that were cycled through before arriving at the final stop.<br> <br>It became important to create journey maps of best case scenarios, so as to assess the approach and figure out what could be done in time as well as what could be done better.<br> <p align="center"><img src="img/portfolio/wrench/Wrench_Journey_Map.png" width="900" /></p><br> <br> Perhaps the most crucial change in the approach came about when it was decided that using gravity to place the jaws could simplify the process by eliminating the need to actuate within the small space in the middle of the wrench. This came about as a serendipitous thought during a brainstorming session with Professor Brown. <br> As such, the final approach was to use gravity to place the jaws in the wrench, with the assistance of an electromagnet and to rotate the wrench around the jig and repeat - so as to place all 6 jaws. <br><br> The full design journey is detailed below!<br><br><h2>Mechanical Design</h2>The mechanical design involved in this project was by far the most important, most complex and thus the most time consuming aspect of the project. As is the nature of design, it involved a lot of iterations as well as a few changes in approach that ultimately led to the final design. This final set up is shown below<span>&#58;</span><br> <p align="center"> <script src="https://embed.github.com/view/3d/LeTo37/Part_Placement_Automation_Project/master/Mechanical_Design/Current/3D_Prints/Final.stl"></script><img src="img/portfolio/wrench/Wrench.png" width="400" /> </p><br> <h3> Initial Designs</h3> The two initial goals of the design, deemed to be the most important in order to achieve the end goal, were to hold the wrench in place and then subsequently to be able to place a jaw in the wrench in a manner that could be repeated 6 times - for each jaw. This led to the first iterations of the design worth mentioning.<h4>Outer Jig - Wrench Holder</h4>It became clear that a way in which 6 jaws could be placed in a repetitive manner would be to hold the wrench in place around the center, wherein the jaw actuation would take place, and then rotate the wrench around this actuator. This led to the following design. The indentations around the circle are in there to allow for a jaw to be placed in any of those six spots. The raised bumps on either side of the circle are the to help fix the wrench in place.<br><p align="center"> <a href="https://github.com/LeTo37/Part_Placement_Automation_Project/blob/master/Mechanical_Design/Iterations/wrench_outer_jig_II.stl"><img src="img/portfolio/wrench/wrench_outer_jig_II.png" style="width:360px; height:300px" title="wrench_outer_jig_II" alt="outerjig"></a></p><br> This design was clearly not very good as it was not dimensioned well to hold the wrench at all. This design evolved into something that was built off of the wrench's actual dimensions. It included a bit more support for the bottom of the wrench.<br><p align="center"> <a href="https://github.com/LeTo37/Part_Placement_Automation_Project/blob/master/Mechanical_Design/Iterations/wrench_outer_jig_III.stl"><img src="img/portfolio/wrench/wrench_outer_jig_III.png" style="width:360px; height:300px" title="wrench_outer_jig_III" alt="outerjig"></a></p><br> This design finally became dimensioned to precisely hold the wrench open to a certain angle - so as to allow for the jaws to be placed within the wrench. It further includes some protection against the wrench falling out of the jig since the final design requires for the jig and wrench combination to be held at a 90 degree angle. <br> <p align="center"> <script src="https://embed.github.com/view/3d/LeTo37/Part_Placement_Automation_Project/master/Mechanical_Design/Current/3D_Prints/jig.stl"></script> </p><br><h4>Inner Jig - Jaw Placement</h4> The jaw placement designs tell a story of the two key changes of approach that completely revolutionised how the whole project would look.<br>The first design for the inner jig was based off of the idea that the jaws would be fed into the system from above in a uniform manner. This meant that the jaws would have to be shifted laterally in a translational manner so as to place the jaw in the wrench.<br><p align="center"> <script src="https://embed.github.com/view/3d/LeTo37/Part_Placement_Automation_Project/master/Mechanical_Design/Iterations/Feed_from_top.stl"></script> </p><br>As can be seen in the above design, the jaw was supposed to be caught by the "jaw placer" in the middle of the jig. This would then be actuated laterally - perhaps with a solenoid - from below so as to place the jaw.<br>The problem encountered with this design was that the reliability of the jaw falling in the correct orientation was low as well as the lack of physical space in which to actuate the "jaw placer". This led to the next idea which was to feed the jaws into the system from the bottom.<br><br>This design was based off of the same principle of using a "jaw placer" in the center of the jig to place the jaws. But this time the jaws being fed into the jig from the bottom would push against the ramp in the housing in the middle of the jig which would in turn force the jaw out of the opening and onto the "jaw placer". Subsequently, the "jaw placer" would then be actuated laterally from below so as to place the jaw.<br><p align="center"> <script src="https://embed.github.com/view/3d/LeTo37/Part_Placement_Automation_Project/master/Mechanical_Design/Iterations/Feed_from_bottom.stl"></script> </p><br>This again saw similar problems as the "feed from the top" design as the jaw still had to fall into place and the room for actuation was not improved.<br><br>While playing around with the 3D printed models of the design, it was noticed that holding the center jig at a 90 degree angle to the wrench allowed for the jaws in the system to simply fall into place! This revelation led to the final approach used in the project.<br><br><h2>Final Designs - Gravity is my Friend!</h2><h3> Inner Jig </h3>The final design idea is to have the jaws being fed laterally into the inner jig. Once in the inner jig, these jaws can then fall into the wrench if the outerjig holds the wrench in the correct spot. Below is the design for the inner jig, along with a feeding tube used to get the jaws into the jig<span>&#58;</span><br><p align="center"> <script src="https://embed.github.com/view/3d/LeTo37/Part_Placement_Automation_Project/master/Mechanical_Design/Current/3D_Prints/feeder_plus_inner.stl"></script><img src="img/portfolio/wrench/feeder.png" width="400" /></p><br> With this design, some key objectives in order to make it useful are to propel the jaws along the feeding tube into the inner jig, control how and when the jaws are dropped into the wrench and to keep the jaws in the correct orientation so that they can fall into place. A simple solution to solve all three of these objectives is to use an electromagnet placed at the head of the inner jig as well as a steel bar placed above the head of the inner jig that extends to the feeding tube. This bar will act as a magnet when the electromagnet is on and as such will keep the jaws oriented correctly. The steel bar can be seen in the image above. The placement of the electromagnet can be seen in the full assemnbly of the final design.<br><br><h3>Rig</h3> In order to have this design held at 90 degrees, a rig was designed. This rig was designed with two main objectives, it had to be able to support the weight of all the necessary components of the design and it had to allow for the movement necessary for the design. It can be seen below<span>&#58;</span><br><p align="center"> <script src="https://embed.github.com/view/3d/LeTo37/Part_Placement_Automation_Project/master/Mechanical_Design/Current/Laser_Cut_Pieces/Rig.stl"></script> </p><br> This rig is made from 3mm thick acryllic sheets and was laser cut and assembled from 6 parts. The drawings of these cuts can be found in `.dxf` format in <a href=https://github.com/LeTo37/Part_Placement_Automation_Project/blob/master/Mechanical_Design/Current/Laser_Cut_Pieces target="_blank">this directory</a> of the Github repository. The rig has holes in the front piece, these holes are there to allow for the necessary components of the design to be screwed into the correct location.<br><br><h3>Gears</h3> With the rig and inner jig in place, in order to rotate the outer jig holding the wrench around the inner jig - in order to place 6 jaws, it became clear that a gear system driven by a motor would be necessary. The gears were designed such that the driver gear could be controlled by a stepper motor and the driven gear can hold and rotate the outer jig. The gears were designed with a teeth ratio of 35/15. This was chosen to allow for easy rotation in minimal space, allowing the driver gear to be small but not require a very strong motor.<br> The driven gear was 3D printed so as to allow for it to be connected to the stepper motor using a sprocket with a set screw. This design is shown below, including the sprocket used<span>&#58;</span><br><p align="center"> <script src="https://embed.github.com/view/3d/LeTo37/Part_Placement_Automation_Project/master/Mechanical_Design/Current/3D_Prints/gear_driver.stl"></script><img src="img/portfolio/wrench/motor_gear.png" width="400" /> </p><br> The driven gear was laser cut and designed with a hole in the middle of it, in the shape of the outer jig. The outer jig was then joined to the gear making it one part capable of rotating around the inner jig while holding onto the wrench. The driven gear with the outer jig holding a wrench can be seen below<span>&#58;</span><br><p align="center"> <script src="https://embed.github.com/view/3d/LeTo37/Part_Placement_Automation_Project/master/Mechanical_Design/Current/Laser_Cut_Pieces/jig_gear.stl"></script><img src="img/portfolio/wrench/jig_gear_actual.png" width="400" /> </p><br><h3>Clamps</h3>Since the driven gear has to hold the wrench, this part - with the wrench in place, is heavy and could easily fall of the front of the rig. With this in mind, magnetic clamps were designed to hold the driven gear flush to the face of the rig while still allowing for full rotation of the gear.<br> These are designed to hold magnets on either side of the rig. This allows for the driven gear and the wrench to be easily removed for a new wrench to be placed into the system, yet it allows for the gear to rotate freely and mesh properly with the driver gear. The design is shown below, the cylindrical holes are dimensioned to hold magnets firmly in place<span>&#58;</span><br><p align="center"> <script src="https://embed.github.com/view/3d/LeTo37/Part_Placement_Automation_Project/master/Mechanical_Design/Current/3D_Prints/clamp.stl"></script> <img src="img/portfolio/wrench/clamp_actual.png" width="400" /></p><br><h3>Actuators</h3>In order to actuate the design as described, the electromagnet and stepper motor being used will need to be held in place.<br> The motor was held in place, with its shaft, at the necessary distance using a spacer screwed into both the front of the rig as well as the actual motor. This <a href=https://github.com/LeTo37/Part_Placement_Automation_Project/blob/master/Mechanical_Design/Current/3D_Prints/motor_spacer.stl target="_blank">spacer</a> was 3D printed.<br>Further, the electromagnet needs to be held at the head of the inner jig. This holder was made of two 3D printed parts, <a href=https://github.com/LeTo37/Part_Placement_Automation_Project/blob/master/Mechanical_Design/Current/3D_Prints/elecmag_holder1.stl target="_blank">elecmag_holder1</a> and <a href=https://github.com/LeTo37/Part_Placement_Automation_Project/blob/master/Mechanical_Design/Current/3D_Prints/elecmag_holder2.stl target="_blank">elecmag_holder2.</a> This was designed to be able to hold the heavy electromagnet in place while allowing for the full rotation of the wrench.<br><br> <h2>Electronics</h2> <p align="center"><img src="img/portfolio/wrench/electronics.png" width="650"/></p>The electronics of this system can be broken down into 3 seperate sections, namely the microntroller and the surrounding circuitry, the electromagnet driver and the stepper motor driver.<h3> Microcontroller</h3> The brains of the project allowing for the electromagnet to be triggered at the right time and controlling the rotation and timing of the stepper motor is a <a href=https://github.com/LeTo37/Part_Placement_Automation_Project/blob/master/Docs/PIC32MX1XX2XX-28-36-44-PIN-DS60001168K.pdf target="_blank">PIC32MX250F128B</a> microcontoller. <br> The breakout schematic of this microcontroller, necessary for programming as well as interaction at a 3.3V logic level, is shown below. It includes a 3.3V voltage regulator, a <a href="https://www.pololu.com/" target="_blank">Pololu</a> breakout board of a micro-usb connector as well as a MPLAB Snap for programming. <br><br> <p align="center"><img src="img/portfolio/wrench/PIC32_BREAKOUT.png" width="700" /> </p> <h3>Electromagnet Driver</h3> The circuitry that is used to drive the <a href="https://github.com/LeTo37/Part_Placement_Automation_Project/blob/master/Docs/Electromagnets_McMaster-Carr.pdf" target="_blank">electromagnet</a> consists of a GPIO pin from the microcontroller going through a 1 kilo Ohm resistor to the base of an NPN Darlington transistor. The collector of which is connected to a 12V power supply through a parallel combination of the electromagnet being activated and a flyback diode. The emmitter of the transistor is connected to ground. This allows the GPIO pin to be used as a simple on/off switch for the electromagnet.<p align="center"><img src="img/portfolio/wrench/ELECTROMAGNET_DRIVER.png" width="500"/></p><br><br><h3>Stepper Motor Driver</h3> The circuitry used to control the stepper motor is the Pololu <a href="https://github.com/LeTo37/Part_Placement_Automation_Project/blob/master/Docs/drv8825.pdf" target="_blank">MD20b</a> chip. This chip is a breakout board for the <a href="https://www.pololu.com/product/2133/resources" target="_blank">DRV8825</a> which has two H-bridge drivers and a microstepping indexer, along with some protective circuitry. This chip allows the stepper to be simply controlled by 3 GPIO pins to control the step resolution (M0,M1,M2) and one pin set to output a PWM signal (STEP). This chip also allows for 3.3V logic to be used from the microcontroller while supplying the motor with the 12V necessary to use it.<br>As can be seen in the <a href="https://github.com/LeTo37/Part_Placement_Automation_Project/tree/master/Code" target="_blank">code</a>, pins M0, M1 and M2 are used to set the resolution at which the motor is controlled. Setting M0 and M1 high and M2 low sets the driver to control the motor in 1/8 step mode, meaning the 200-step-per-revolution motor now has 1600 microsteps per revolution. A PWM signal is sent to the STEP pin to drive the motor.<br><p align="center"><img src="img/portfolio/wrench/STEPPER_MOTOR_DRIVER.png" width="500" /> </p><br><h2>Code</h2> The <a href="https://github.com/LeTo37/Part_Placement_Automation_Project/tree/master/Code" target="_blank">code</a> for this project was done in C in the <a href="https://www.microchip.com/mplab/mplab-x-ide" target="_blank">MPLAB X IDE</a>. This code is written for and loaded onto a <a href="https://github.com/LeTo37/Part_Placement_Automation_Project/blob/master/Docs/PIC32MX1XX2XX-28-36-44-PIN-DS60001168K.pdf" target="_blank">PIC32MX250F128B</a> microcontoller.<br><br> The purpose of this code is to control how the electromagnet and stepper motor get triggered and rotated respectively. The code controls GPIO pins on the microcontroller to be set high and low so as to rotate the stepper motor the necessary amount at the correct time and turn the electromagnet on and off at the correct times.<br> A user button is used to step through each state, these states being electromagnet off, electromagnet on and rotate stepper motor. This allows for easy control of the system. This code can be easily changed to not rely on the button, in order to run the process without human intervention.<br><br> <h2>Future Work</h2> Further work on this project could include<span>&#58;<br><br><ul><li> The mechanical and electrical design of an automated rivet pin placer. With this complete, the whole system can run independant of human interaction. I think a 'bullet magazine' type mechanism actuated with a solenoid could be used to achieve this.</li><li> The design and printing of a dedicated PCB for the system as opposed to leaving everything on a breadboard. With the schematics already developed, this could be done quickly and easily.</li><li> Integration with the rest of the manufacturing process as well as automation of the rest of the manufacturing process presents a great new challenge to tackle, one with great reward.</li> </ul> <br> <br> <h2>Further Reading </h2><br>For more detailed descriptions of how this all came together, please visit the project's Github repository found <a href="https://github.com/LeTo37/Part_Placement_Automation_Project" target="_blank">here.</a>

---